{
  "uid" : "1a3f70afd7d9bc53",
  "name" : "test_NewCar[chrome-carbrand0]",
  "fullName" : "test_carwale.Test_carWale#test_NewCar",
  "historyId" : "d9387b935ee5e7b64a8ce63007610035",
  "time" : {
    "start" : 1622880613695,
    "stop" : 1622880616063,
    "duration" : 2368
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: title doesnt match,current page title is:-New Cars in India 2021 | New Car Information | Best New Cars - CarWale\nassert 'New Cars in ...ars - CarWale' == 'Gmail'\n  - Gmail\n  + New Cars in India 2021 | New Car Information | Best New Cars - CarWale",
  "statusTrace" : "self = <Tests.test_carwale.Test_carWale object at 0x00000286BC60EF10>\ncarbrand = ['Hundai']\n\n    @pytest.mark.parametrize(\"carbrand\", dataProvider.get_data(\"Cars\"))\n    def test_NewCar(self, carbrand):\n        log.logger.info(\"selecting new car brand\")\n        home = HomePage(self.driver)\n        carBase = CarBasePage(self.driver)\n        #print((\"*****car brand is****\", carbrand)\n        # function chaining- return object of classname in main object Page\n        if carbrand == [\"Hundai\"]:\n            home.gotoNewCars().selectHundai()\n            title= self.driver.title\n>           assert title==\"Gmail\",\"title doesnt match,current page title is:-\"+str(title)\nE           AssertionError: title doesnt match,current page title is:-New Cars in India 2021 | New Car Information | Best New Cars - CarWale\nE           assert 'New Cars in ...ars - CarWale' == 'Gmail'\nE             - Gmail\nE             + New Cars in India 2021 | New Car Information | Best New Cars - CarWale\n\ntest_carwale.py:34: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "get_browser",
    "time" : {
      "start" : 1622880598491,
      "stop" : 1622880613694,
      "duration" : 15203
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "log_on_failure",
    "time" : {
      "start" : 1622880613694,
      "stop" : 1622880613694,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: title doesnt match,current page title is:-New Cars in India 2021 | New Car Information | Best New Cars - CarWale\nassert 'New Cars in ...ars - CarWale' == 'Gmail'\n  - Gmail\n  + New Cars in India 2021 | New Car Information | Best New Cars - CarWale",
    "statusTrace" : "self = <Tests.test_carwale.Test_carWale object at 0x00000286BC60EF10>\ncarbrand = ['Hundai']\n\n    @pytest.mark.parametrize(\"carbrand\", dataProvider.get_data(\"Cars\"))\n    def test_NewCar(self, carbrand):\n        log.logger.info(\"selecting new car brand\")\n        home = HomePage(self.driver)\n        carBase = CarBasePage(self.driver)\n        #print((\"*****car brand is****\", carbrand)\n        # function chaining- return object of classname in main object Page\n        if carbrand == [\"Hundai\"]:\n            home.gotoNewCars().selectHundai()\n            title= self.driver.title\n>           assert title==\"Gmail\",\"title doesnt match,current page title is:-\"+str(title)\nE           AssertionError: title doesnt match,current page title is:-New Cars in India 2021 | New Car Information | Best New Cars - CarWale\nE           assert 'New Cars in ...ars - CarWale' == 'Gmail'\nE             - Gmail\nE             + New Cars in India 2021 | New Car Information | Best New Cars - CarWale\n\ntest_carwale.py:34: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "2b1c1f11325cc3e1",
      "name" : "log",
      "source" : "2b1c1f11325cc3e1.txt",
      "type" : "text/plain",
      "size" : 641
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "get_browser::0",
    "time" : {
      "start" : 1622880617443,
      "stop" : 1622880620853,
      "duration" : 3410
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  }, {
    "name" : "log_on_failure::0",
    "time" : {
      "start" : 1622880616960,
      "stop" : 1622880617441,
      "duration" : 481
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "a47ac0ea6b1ddbba",
      "name" : "dologin",
      "source" : "a47ac0ea6b1ddbba.png",
      "type" : "image/png",
      "size" : 28506
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 1
  } ],
  "labels" : [ {
    "name" : "tag",
    "value" : "@pytest.mark.usefixtures('log_on_failure', 'get_browser')"
  }, {
    "name" : "suite",
    "value" : "test_carwale"
  }, {
    "name" : "subSuite",
    "value" : "Test_carWale"
  }, {
    "name" : "host",
    "value" : "DESKTOP-4F5BNAL"
  }, {
    "name" : "thread",
    "value" : "4776-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "test_carwale"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "carbrand",
    "value" : "['Hundai']"
  }, {
    "name" : "get_browser",
    "value" : "'chrome'"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ "@pytest.mark.usefixtures('log_on_failure', 'get_browser')" ]
  },
  "source" : "1a3f70afd7d9bc53.json",
  "parameterValues" : [ "['Hundai']", "'chrome'" ]
}